import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as d,o as i}from"./app-C6ozGgjR.js";const a={};function s(n,e){return i(),o("div",null,e[0]||(e[0]=[d('<h1 id="time-constants" tabindex="-1"><a class="header-anchor" href="#time-constants"><span>Time constants</span></a></h1><p><em>Available during initial setup of the integration as well as via <code>Configure</code> option</em></p><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h2><table><thead><tr><th>Option</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>Caching time</td><td><code>integer</code></td><td><code>5</code></td><td>Time to cache data from the API endpoints<br>Units:<code>seconds</code></td></tr><tr><td>Devices / AiMesh update</td><td><code>integer</code></td><td><code>30</code></td><td>Time interval for devices and nodes monitoring. This value is used for both <code>device_tracker</code> entities, as well as <code>connected devices</code> sensor and <code>aimesh</code> sensors<br>Units:<code>seconds</code></td></tr><tr><td>Consider home</td><td><code>integer</code></td><td><code>45</code></td><td>Time to consider device connected after the last <code>home</code> state.<br>Units: <code>seconds</code><br>Refer to the section <a href="#consider-home">Consider home</a></td></tr><tr><td>Firmware data</td><td><code>integer</code></td><td><code>21600</code></td><td>Interval to update the <code>update</code> entity<br>Units: <code>seconds</code><br>Default value is equal <code>6 hours</code></td></tr><tr><td>Entities update</td><td><code>integer</code></td><td><code>30</code></td><td>Interval to update all the other entities<br>Units: <code>seconds</code><br>Available if <code>Operation mode / Enable per-sensor update intervals</code> is set to <code>False</code></td></tr><tr><td>{Type} data</td><td><code>integer</code></td><td><code>30</code></td><td>Interval to update data fom a single {type}<br>Units: <code>seconds</code><br>Available if <code>Operation mode / Enable per-sensor update intervals</code> is set to <code>True</code><br>Refer to the section <a href="#entities-update">Entities update</a></td></tr></tbody></table><h2 id="consider-home" tabindex="-1"><a class="header-anchor" href="#consider-home"><span>Consider home</span></a></h2><p>This value controls how fast does device tracker change state to <code>not home</code> after the last <code>home</code> state was recorder.</p><ul><li><code>consider home &lt;= device tracker update</code>, device tracker will get <code>not home</code> state as soon as device state is checked and it is not connected.</li><li><code>consider home &gt; device tracker update</code>, <code>not home</code> state will be assigned only after device is offline for longer than <code>consider home</code>.</li></ul><h2 id="entities-update" tabindex="-1"><a class="header-anchor" href="#entities-update"><span>Entities update</span></a></h2><p>Currently AsusRouter supports the following data types, which are polled separately:</p><ul><li>CPU</li><li>Firmware</li><li>Guest WLAN</li><li>Light</li><li>Misc</li><li>Network stat</li><li>Parental control</li><li>Ports</li><li>RAM</li><li>Sysinfo</li><li>Temperature</li><li>VPN</li><li>WAN</li><li>WLAN</li></ul><p>Each of these types support setting polling interval.</p>',11)]))}const l=t(a,[["render",s]]),h=JSON.parse('{"path":"/guide/configuration/time-constants.html","title":"Time constants","lang":"en-US","frontmatter":{"next":"network-interfaces.md"},"git":{"createdTime":1757648996000,"updatedTime":1757648996000,"contributors":[{"name":"Yevhenii Vaskivskyi","username":"","email":"yevhenii@vaskivskyi.com","commits":1}]},"readingTime":{"minutes":0.97,"words":291},"filePathRelative":"guide/configuration/time-constants.md","localizedDate":"September 12, 2025"}');export{l as comp,h as data};
