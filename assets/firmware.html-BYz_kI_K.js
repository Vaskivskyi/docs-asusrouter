import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as t,o as a}from"./app-C6ozGgjR.js";const d={};function r(n,i){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="firmware" tabindex="-1"><a class="header-anchor" href="#firmware"><span>Firmware</span></a></h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h2><p><strong>Source code:</strong> <code>modules.firmware.py</code> | <strong>Import:</strong> <code>asusrouter.modules.firmware</code></p><p>This module allows processing, comparing and operating with firmware information of a device.</p><h3 id="firmware-1" tabindex="-1"><a class="header-anchor" href="#firmware-1"><span><code>Firmware</code></span></a></h3><p><strong>Type:</strong> <code>class</code></p><p><strong>Arguments:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Default argument</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">version: Optional[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Optional arguments when version is explicitly set to None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">major: Optional[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">minor: Optional[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">build: Optional[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">revision: Optional[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Recommended usage:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Initialize a Firmware object by explicitly providing version</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Firmware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3.0.0.4.386_40451&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Acceptable initialization</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Firmware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3004.386.5_2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is recommended to create a <code>Firmware</code> object using the <code>version</code> argument. The object will automatically be parsed into major, minor, build and revision parts using <a href="#firmware-from-string"><code>from_string()</code></a> method.</p><p><strong>Processing of the version:</strong></p><p>When <code>Firmware</code> object is initialized, additional processing is done automatically with:</p><ul><li><a href="#firmware-update-beta"><code>_update_beta()</code></a></li><li><a href="#firmware-update-rog"><code>_update_rog()</code></a></li><li><a href="#firmware-update-source"><code>_update_source()</code></a></li></ul><p><strong>Other usage:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Alternative initialization</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># In this case, all the arguments should be provided</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># in the correct format</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Firmware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">major</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3.0.0.4&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">minor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">388</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">57123</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Format for the arguments:</p><ul><li><code>major</code> = <code>3.0.0.4</code>, <code>9.0.0.4</code>, <code>3.0.0.6</code>, <code>9.0.0.6</code></li><li><code>minor</code> = <code>384</code>, <code>386</code>, <code>388</code>, <code>102</code></li><li><code>build</code> = <code>40451</code>, <code>54041</code>, <code>5</code>, <code>7</code></li><li><code>revision</code> = <code>2beta1</code>, <code>g386313</code>, <code>1gnuton-beta1</code></li></ul><p><strong>Properties:</strong></p><table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>major</code></td><td><code>str</code></td><td>Major version</td></tr><tr><td><code>minor</code></td><td><code>int</code></td><td>Minor version</td></tr><tr><td><code>build</code></td><td><code>int</code></td><td>Build version</td></tr><tr><td><code>revision</code></td><td><code>int/str</code></td><td>Revision</td></tr><tr><td><code>beta</code></td><td><code>bool</code></td><td>Beta version</td></tr><tr><td><code>rog</code></td><td><code>bool</code></td><td>ROG build key</td></tr><tr><td><code>source</code></td><td><code>str</code></td><td>Source</td></tr></tbody></table><h3 id="firmware-from-string" tabindex="-1"><a class="header-anchor" href="#firmware-from-string"><span><code>Firmware.from_string()</code></span></a></h3><p><strong>Arguments:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">fw_string: Optional[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Returns:</strong> <code>None</code></p><p><strong>Updates properties:</strong> <code>major</code>, <code>minor</code>, <code>build</code>, <code>revision</code>, <code>beta</code>, <code>rog</code></p><p>This method is used to parse the firmware version string into major, minor, build and revision parts. In addition, check for the ROG build key is done automatically. The parsing is done using the following regular expressions:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;^</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;major&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">39</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">0.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">0.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">46</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">_.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;minor&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0-9</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]{3}</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">_.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;build&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0-9</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">_.-</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;revision&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">a-zA-Z0-9-_</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">]+?</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(?=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">_rog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">?P&lt;rog&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">_rog</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">$&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>major</code> part can be reconstructed from formats including <code>3.0.0.4</code>, <code>3004</code> and their variations. It can be omitted.</li><li><code>major</code> and <code>minor</code> might be separated by a dot, an underscore or by nothing.</li><li><code>minor</code> part is always 3 digits long.</li><li><code>minor</code> and <code>build</code> might be separated by a dot, an underscore or by nothing.</li><li><code>build</code> part is any number of digits long.</li><li><code>build</code> and <code>revision</code> might be separated by a dot, an underscore, a dash or by nothing.</li><li><code>revision</code> part can contain any alphanumeric characters, dashes and underscores. It can be omitted or can include the <code>_rog</code> suffix.</li><li><code>_rog</code> suffix is optional and can be found at the end of the version string.</li></ul><p><strong>Example usage:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Firmware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">from_string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3004.386.5_2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firmware-update-beta" tabindex="-1"><a class="header-anchor" href="#firmware-update-beta"><span><code>Firmware._update_beta()</code></span></a></h3><p><strong>Arguments:</strong> <code>None</code></p><p><strong>Returns:</strong> <code>None</code></p><p><strong>Updates properties:</strong> <code>beta</code></p><p>This method checks if the firmware major version has beta-digit (starting <code>9</code>) and sets the <code>Firmware.beta</code> property accordingly.</p><h3 id="firmware-update-rog" tabindex="-1"><a class="header-anchor" href="#firmware-update-rog"><span><code>Firmware._update_rog()</code></span></a></h3><p><strong>Arguments:</strong> <code>None</code></p><p><strong>Returns:</strong> <code>None</code></p><p><strong>Updates properties:</strong> <code>rog</code></p><p>This method checks if the firmware revision contains <code>_rog</code> suffix and sets the <code>Firmware.rog</code> property accordingly. If the suffix is found, it is removed from the revision. This ensures that revisions <code>1</code> and <code>1_rog</code> are treated as the same (as they are).</p><h3 id="firmware-update-source" tabindex="-1"><a class="header-anchor" href="#firmware-update-source"><span><code>Firmware._update_source()</code></span></a></h3><p><strong>Arguments:</strong> <code>None</code></p><p><strong>Returns:</strong> <code>None</code></p><p><strong>Updates properties:</strong> <code>source</code></p><p>This method checks the origin of the firmware version and sets the <code>Firmware.source</code> property accordingly.</p><p>The firmware discriminated based on the <code>revision</code> property. Revisions can be distinguished as follows:</p><table><thead><tr><th>Source</th><th>Specifics</th></tr></thead><tbody><tr><td><code>FirmwareType.GNUTON</code></td><td><code>gnuton</code> in revision</td></tr><tr><td><code>FirmwareType.MERLIN</code></td><td>integer revision, otherwise <code>alpha</code> or <code>beta</code> in revision</td></tr><tr><td><code>FirmwareType.STOCK</code></td><td>any other string in revision</td></tr></tbody></table><h3 id="firmware-eq" tabindex="-1"><a class="header-anchor" href="#firmware-eq"><span><code>Firmware.__eq__()</code></span></a></h3><p><strong>Arguments:</strong> <code>other: object</code></p><p><strong>Returns:</strong> <code>bool</code></p><p>This method compares two <code>Firmware</code> objects and returns <code>True</code> if they are equal. The comparison is done based on the <code>major</code>, <code>minor</code>, <code>build</code> and <code>revision</code> properties only. The <code>beta</code>, <code>rog</code> and <code>source</code> properties are not taken into account. When comparing with other objects, the method always returns <code>False</code>.</p><p>This method implicitly allows usage of <code>Firmware.__ne__()</code> method.</p><p><strong>Example</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> other_firmware</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># or opposite</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> other_firmware</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firmware-gt" tabindex="-1"><a class="header-anchor" href="#firmware-gt"><span><code>Firmware.__gt__()</code></span></a></h3><p><strong>Arguments:</strong> <code>other: object</code></p><p><strong>Returns:</strong> <code>bool</code></p><p>This method compares two <code>Firmware</code> objects and returns <code>True</code> if the first object is greater than the second one. The method is based on the <a href="#firmware-lt"><code>__lt__()</code></a> and <a href="#firmware-eq"><code>__eq__()</code></a> methods.</p><p><strong>Example</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> other_firmware</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="firmware-lt" tabindex="-1"><a class="header-anchor" href="#firmware-lt"><span><code>Firmware.__lt__()</code></span></a></h3><p><strong>Arguments:</strong> <code>other: object</code></p><p><strong>Returns:</strong> <code>bool</code></p><p>This method compares two <code>Firmware</code> objects and returns <code>True</code> if the first object is less than the second one. The comparison is done based on the <code>major</code>, <code>minor</code>, <code>build</code> and <code>revision</code> properties only. The <code>beta</code>, <code>rog</code> and <code>source</code> properties are not taken into account when comparing. When comparing with other objects or if the <code>source</code> property is different, the method always returns <code>False</code>. The last ensures that the comparison between e.g. <code>Merlin</code> and <code>Stock</code> firmware won&#39;t return false positive.</p><p><strong>Example</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_firmware </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> other_firmware</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="firmware-repr" tabindex="-1"><a class="header-anchor" href="#firmware-repr"><span><code>Firmware.__repr__()</code></span></a></h3><p><strong>Arguments:</strong> <code>None</code></p><p><strong>Returns:</strong> <code>str</code></p><p>Mimics the <a href="#firmware-str"><code>__str__()</code></a> method.</p><h3 id="firmware-str" tabindex="-1"><a class="header-anchor" href="#firmware-str"><span><code>Firmware.__str__()</code></span></a></h3><p><strong>Arguments:</strong> <code>None</code></p><p><strong>Returns:</strong> <code>str</code></p><p>This method returns the firmware as a string in format <code>major.minor.build_revision</code> or <code>major.minor.build_revision_rog</code> if the ROG build key is present.</p><h3 id="firmwaretype" tabindex="-1"><a class="header-anchor" href="#firmwaretype"><span><code>FirmwareType</code></span></a></h3><p><strong>Type:</strong> <code>enum</code></p><p><strong>Values:</strong></p><table><thead><tr><th>Member</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>FirmwareType.STOCK</code></td><td><code>0</code></td><td>Stock firmware</td></tr><tr><td><code>FirmwareType.MERLIN</code></td><td><code>1</code></td><td>Merlin custom firmware</td></tr><tr><td><code>FirmwareType.GNUTON</code></td><td><code>2</code></td><td>Gnuton custom firmware</td></tr><tr><td><code>FirmwareType.UNKNOWN</code></td><td><code>-999</code></td><td>Unknown firmware type</td></tr></tbody></table><h3 id="webserror" tabindex="-1"><a class="header-anchor" href="#webserror"><span><code>WebsError</code></span></a></h3><p><strong>Type:</strong> <code>enum</code></p><p><strong>Values:</strong></p><table><thead><tr><th>Member</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>WebsError.NONE</code></td><td><code>0</code></td><td>No error detected</td></tr><tr><td><code>WebsError.DOWNLOAD_ERROR</code></td><td><code>1</code></td><td>Error during download of the firmware (e.g. cannot connect to the server)</td></tr><tr><td><code>WebsError.SPACE_ERROR</code></td><td><code>2</code></td><td>Not enough space on the device to proceed with the firmware update</td></tr><tr><td><code>WebsError.FW_ERROR</code></td><td><code>3</code></td><td>Firmware is not compatible with the device or is corrupted</td></tr><tr><td><code>WebsError.UNKNOWN</code></td><td><code>-999</code></td><td>Unknown error</td></tr></tbody></table><h3 id="websflag" tabindex="-1"><a class="header-anchor" href="#websflag"><span><code>WebsFlag</code></span></a></h3><p><strong>Type:</strong> <code>enum</code></p><p><strong>Values:</strong></p><table><thead><tr><th>Member</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>WebsFlag.DONT</code></td><td><code>0</code></td><td>Do not perform update</td></tr><tr><td><code>WebsFlag.AVAILABLE</code></td><td><code>1</code></td><td>Update is available</td></tr><tr><td><code>WebsFlag.FORCE</code></td><td><code>2</code></td><td>Force upgrade</td></tr><tr><td><code>WebsFlag.UNKNOWN</code></td><td><code>-999</code></td><td>Unknown flag</td></tr></tbody></table><h3 id="websupdate" tabindex="-1"><a class="header-anchor" href="#websupdate"><span><code>WebsUpdate</code></span></a></h3><p><strong>Type:</strong> <code>enum</code></p><p><strong>Values:</strong></p><table><thead><tr><th>Member</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>WebsUpdate.ACTIVE</code></td><td><code>0</code></td><td>Checking for update</td></tr><tr><td><code>WebsUpdate.INACTIVE</code></td><td><code>1</code></td><td>Inactive</td></tr><tr><td><code>WebsUpdate.UNKNOWN</code></td><td><code>-999</code></td><td>Unknown</td></tr></tbody></table><h3 id="websupgrade" tabindex="-1"><a class="header-anchor" href="#websupgrade"><span><code>WebsUpgrade</code></span></a></h3><p><strong>Type:</strong> <code>enum</code></p><p><strong>Values:</strong></p><table><thead><tr><th>Member</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>WebsUpgrade.INACTIVE</code></td><td><code>-1</code></td><td>Inactive</td></tr><tr><td><code>WebsUpgrade.DOWNLOADING</code></td><td><code>0</code></td><td>Downloading new firmware</td></tr><tr><td><code>WebsUpgrade.FINISHED</code></td><td><code>1</code></td><td>Firmware download finished</td></tr><tr><td><code>WebsUpgrade.ACTIVE</code></td><td><code>2</code></td><td>Firmware upgrade active</td></tr><tr><td><code>WebsUpgrade.UNKNOWN</code></td><td><code>-999</code></td><td>Unknown</td></tr></tbody></table>`,94)]))}const l=s(d,[["render",r]]),p=JSON.parse('{"path":"/library/modules/firmware.html","title":"Firmware","lang":"en-US","frontmatter":{},"git":{"createdTime":1757648996000,"updatedTime":1757648996000,"contributors":[{"name":"Yevhenii Vaskivskyi","username":"","email":"yevhenii@vaskivskyi.com","commits":1}]},"readingTime":{"minutes":3.18,"words":955},"filePathRelative":"library/modules/firmware.md","localizedDate":"September 12, 2025"}');export{l as comp,p as data};
