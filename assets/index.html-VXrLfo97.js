import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as t,a,d as i,e as n,w as l,r as h,o}from"./app-C6ozGgjR.js";const k={},p={class:"hint-container note"};function A(u,s){const e=h("RouteLink");return o(),r("div",null,[s[41]||(s[41]=t("h1",{id:"library",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#library"},[t("span",null,"Library")])],-1)),s[42]||(s[42]=t("p",null,"AsusRouter is a Python library that serves as a comprehensive API wrapper for interacting with ASUSWRT-powered routers. It communicates using HTTP(S) protocols and provides extensive control and monitoring capabilities. The library is compatible with both the stock AsusWRT firmware and AsusWRT-Merlin, making it a versatile tool for managing and monitoring ASUS network devices.",-1)),t("div",p,[s[3]||(s[3]=t("p",{class:"hint-container-title"},"Note",-1)),t("p",null,[s[1]||(s[1]=i("If you are looking for the documentation on the Home Assistant integration, refer to the ")),n(e,{to:"/guide/getting-started/"},{default:l(()=>s[0]||(s[0]=[i("integration documentation")])),_:1}),s[2]||(s[2]=i("."))])]),s[43]||(s[43]=a('<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><h3 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h3><p>AsusRouter requires Python <code>3.11</code> or higher and is tested with Python <code>3.11</code> and <code>3.12</code>.</p><h3 id="pypi" tabindex="-1"><a class="header-anchor" href="#pypi"><span>PyPI</span></a></h3><p>The latest release of AsusRouter is available from PyPI.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> asusrouter</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="github" tabindex="-1"><a class="header-anchor" href="#github"><span>GitHub</span></a></h3>',7)),t("p",null,[s[5]||(s[5]=i("The latest development version of AsusRouter is available from GitHub. Refer to the ")),n(e,{to:"/library/build.html"},{default:l(()=>s[4]||(s[4]=[i("build instructions")])),_:1}),s[6]||(s[6]=i(" for more information."))]),s[44]||(s[44]=a(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>AsusRouter is an asynchronous library. It is designed to be used with the <code>asyncio</code> module and the <code>async</code>/<code>await</code> syntax. Refer to the <a href="https://docs.python.org/3/library/asyncio.html" target="_blank" rel="noopener noreferrer">asyncio documentation</a> for more information.</p><h3 id="creating-a-router-object" tabindex="-1"><a class="header-anchor" href="#creating-a-router-object"><span>Creating a router object</span></a></h3><p>The <code>AsusRouter</code> class is the main class of the library. It represents a single router device and provides methods for interacting with it.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asusrouter </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> AsusRouter</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">router </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> AsusRouter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;192.168.1.1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Required - IP address or hostname of the router</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    username</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;admin&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Required</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    password</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;admin&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Required</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    port</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Optional - default port would be selected based on use_ssl parameter</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    use_ssl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,              </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Optional - use HTTPS instead of HTTP</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="retrieving-router-data" tabindex="-1"><a class="header-anchor" href="#retrieving-router-data"><span>Retrieving router data</span></a></h3>`,6)),t("p",null,[s[8]||(s[8]=i("The ")),s[9]||(s[9]=t("code",null,"AsusRouter",-1)),s[10]||(s[10]=i(" class provides a set of methods for retrieving data from the router. The library provides an easy to use ")),s[11]||(s[11]=t("code",null,"AsusData",-1)),s[12]||(s[12]=i(" enum that contains all the available data types. Refer to the ")),n(e,{to:"/library/AsusData.html"},{default:l(()=>s[7]||(s[7]=[i("data documentation")])),_:1}),s[13]||(s[13]=i(" for more information."))]),s[45]||(s[45]=a(`<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asusrouter </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> AsusData</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ram_info </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> router.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">async_get_data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(AsusData.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">RAM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">force</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># \`force\` parameter is optional and defaults to False</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># If set to True, the library will fetch the data from the router</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># regardless of the cache state</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ram_info)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example output:</strong></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;free&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">504632</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;total&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1048576</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;used&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">543944</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;usage&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">51.87</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="available-data-types" tabindex="-1"><a class="header-anchor" href="#available-data-types"><span>Available data types</span></a></h4>`,4)),t("p",null,[s[15]||(s[15]=t("code",null,"AsusData",-1)),s[16]||(s[16]=i(" enum covers all the currently available data types. Refer to the ")),n(e,{to:"/library/AsusData.html"},{default:l(()=>s[14]||(s[14]=[i("data documentation")])),_:1}),s[17]||(s[17]=i(" for more information."))]),s[46]||(s[46]=a('<details><summary>Full list</summary><table><thead><tr><th><code>AsusData</code> type</th><th>Description</th></tr></thead><tbody><tr><td><code>AIMESH</code></td><td>AiMesh information</td></tr><tr><td><code>BOOTTIME</code></td><td>Router boot time</td></tr><tr><td><code>CLIENTS</code></td><td>Connected clients</td></tr><tr><td><code>CPU</code></td><td>CPU usage</td></tr><tr><td><code>DEVICEMAP</code></td><td>Device map</td></tr><tr><td><code>FIRMWARE</code></td><td>Firmware information</td></tr><tr><td><code>GWLAN</code></td><td>Guest WLAN</td></tr><tr><td><code>LED</code></td><td>LED state</td></tr><tr><td><code>NETWORK</code></td><td>Network traffic / speed</td></tr><tr><td><code>NODE_INFO</code></td><td>AiMesh Node information</td></tr><tr><td><code>OPENVPN_CLIENT</code></td><td>OpenVPN clients</td></tr><tr><td><code>OPENVPN_SERVER</code></td><td>OpenVPN servers</td></tr><tr><td><code>PARENTAL_CONTROL</code></td><td>Parental control</td></tr><tr><td><code>PORT_FORWARDING</code></td><td>Port forwarding</td></tr><tr><td><code>PORTS</code></td><td>Port information (LAN, USB, WAN)</td></tr><tr><td><code>RAM</code></td><td>RAM usage</td></tr><tr><td><code>SPEEDTEST</code></td><td>Speedtest information</td></tr><tr><td><code>SYSINFO</code></td><td>System information (Merlin-only)</td></tr><tr><td><code>TEMPERATURE</code></td><td>Temperature</td></tr><tr><td><code>VPNC</code></td><td>VPN Client</td></tr><tr><td><code>VPNC_CLIENTLIST</code></td><td>VPN Client list</td></tr><tr><td><code>WAN</code></td><td>WAN information</td></tr><tr><td><code>WIREGUARD_CLIENT</code></td><td>WireGuard clients</td></tr><tr><td><code>WIREGUARD_SERVER</code></td><td>WireGuard servers</td></tr><tr><td><code>WLAN</code></td><td>WLAN information</td></tr></tbody></table></details><h3 id="setting-router-state" tabindex="-1"><a class="header-anchor" href="#setting-router-state"><span>Setting router state</span></a></h3>',2)),t("p",null,[s[19]||(s[19]=i("AsusRouter implements ")),s[20]||(s[20]=t("code",null,"async_set_state()",-1)),s[21]||(s[21]=i(" method that allows to set the state of the router. Refer to the ")),n(e,{to:"/library/AsusState.html"},{default:l(()=>s[18]||(s[18]=[i("state documentation")])),_:1}),s[22]||(s[22]=i(" for more information."))]),s[47]||(s[47]=a(`<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asusrouter.modules.port_forwarding </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> AsusPortForwarding</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> router.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">async_set_state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(AsusPortForwarding.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example output:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # If the state was set successfully</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # If the state was not set successfully</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># AsusRouter is checking device response to determine if the state was</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># set successfully. Device might return \`True\` even if the state was not</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># changed (e.g. if the state is already set)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setting-router-state-with-arguments" tabindex="-1"><a class="header-anchor" href="#setting-router-state-with-arguments"><span>Setting router state with arguments</span></a></h3>`,4)),t("p",null,[s[24]||(s[24]=i("Some states require additional arguments to be set. The ")),s[25]||(s[25]=t("code",null,"async_set_state()",-1)),s[26]||(s[26]=i(" method accepts ")),s[27]||(s[27]=t("code",null,"arguments",-1)),s[28]||(s[28]=i(" parameter that should be a dictionary of arguments. Refer to the ")),n(e,{to:"/library/AsusState.html"},{default:l(()=>s[23]||(s[23]=[i("state documentation")])),_:1}),s[29]||(s[29]=i(" for more information."))]),s[48]||(s[48]=a(`<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> router.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">async_set_state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    AsusWLAN.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;api_type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;gwlan&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Guest WLAN</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;api_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Guest WLAN #2 on 2.4 GHz</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example output:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # If the state was set successfully</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # If the state was not set successfully</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="calling-system-services" tabindex="-1"><a class="header-anchor" href="#calling-system-services"><span>Calling system services</span></a></h3>`,4)),t("p",null,[s[31]||(s[31]=i("Using special ")),s[32]||(s[32]=t("code",null,"AsusSystem",-1)),s[33]||(s[33]=i(" enum, it is possible to call system services. Refer to the ")),n(e,{to:"/library/AsusSystem.html"},{default:l(()=>s[30]||(s[30]=[i("system documentation")])),_:1}),s[34]||(s[34]=i(" for more information. System services are called using ")),s[35]||(s[35]=t("code",null,"async_set_state()",-1)),s[36]||(s[36]=i(" method."))]),s[49]||(s[49]=a(`<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asusrouter.modules.system </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> AsusSystem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">result </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> router.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">async_set_state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(AsusSystem.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">RESTART_HTTPD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example output:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # If the service was called successfully</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # If the service was not called successfully</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="available-system-services" tabindex="-1"><a class="header-anchor" href="#available-system-services"><span>Available system services</span></a></h4>`,4)),t("p",null,[s[38]||(s[38]=t("code",null,"AsusSystem",-1)),s[39]||(s[39]=i(" enum covers all the currently available system services. Refer to the ")),n(e,{to:"/library/AsusSystem.html"},{default:l(()=>s[37]||(s[37]=[i("system documentation")])),_:1}),s[40]||(s[40]=i(" for more information."))]),s[50]||(s[50]=a("<details><summary>Full list</summary><table><thead><tr><th><code>AsusSystem</code> type</th><th>Description</th></tr></thead><tbody><tr><td><code>REBOOT</code></td><td>Reboot router</td></tr><tr><td><code>RESTART_CHPASS</code></td><td>Restart <code>chpass</code></td></tr><tr><td><code>RESTART_DNSMASQ</code></td><td>Restart <code>dnsmasq</code></td></tr><tr><td><code>RESTART_FIREWALL</code></td><td>Restart firewall</td></tr><tr><td><code>RESTART_HTTPD</code></td><td>Restart HTTP daemon</td></tr><tr><td><code>RESTART_LEDS</code></td><td>Restart LEDs</td></tr><tr><td><code>RESTART_OPENVPND</code></td><td>Restart OpenVPN daemon</td></tr><tr><td><code>RESTART_SAMBA</code></td><td>Restart Samba server</td></tr><tr><td><code>RESTART_TIME</code></td><td>Restart <code>time</code></td></tr><tr><td><code>RESTART_USB_IDLE</code></td><td>Restart USB controller (if idle)</td></tr><tr><td><code>RESTART_VPNC</code></td><td>Restart <code>vpnc</code></td></tr><tr><td><code>RESTART_WGS</code></td><td>Restart WireGuard server</td></tr><tr><td><code>RESTART_WIRELESS</code></td><td>Restart WLAN modules</td></tr><tr><td><code>STOP_OPENVPND</code></td><td>Stop OpenVPN daemon</td></tr><tr><td><code>STOP_VPNC</code></td><td>Stop <code>vpnc</code></td></tr><tr><td><code>UPDATE_CLIENTS</code></td><td>Update clients</td></tr></tbody></table></details>",1))])}const c=d(k,[["render",A]]),m=JSON.parse('{"path":"/library/","title":"Library","lang":"en-US","frontmatter":{},"git":{"createdTime":1757648996000,"updatedTime":1757648996000,"contributors":[{"name":"Yevhenii Vaskivskyi","username":"","email":"yevhenii@vaskivskyi.com","commits":1}]},"readingTime":{"minutes":2.47,"words":741},"filePathRelative":"library/README.md","localizedDate":"September 12, 2025"}');export{c as comp,m as data};
