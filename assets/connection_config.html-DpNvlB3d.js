import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as o,a as l,d as n,e as c,w as s,r,o as d}from"./app-C6ozGgjR.js";const f={};function u(p,e){const i=r("RouteLink");return d(),a("div",null,[e[7]||(e[7]=o("p",null,[o("code",null,"asusrouter.connection_config")],-1)),e[8]||(e[8]=o("h2",{id:"module-info",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#module-info"},[o("span",null,"Module info")])],-1)),o("p",null,[e[1]||(e[1]=n("This module provides configuration management tools for the connection settings in the AsusRouter library. The configurations are used per-instance of the ")),e[2]||(e[2]=o("code",null,"Connection",-1)),e[3]||(e[3]=n(" class and can be passed directly to it, through ")),e[4]||(e[4]=o("code",null,"AsusRouter",-1)),e[5]||(e[5]=n(" initialization on startup, or dynamically set during runtime. Details on how exactly the configurations are used can be found in the ")),c(i,{to:"/library/connection.html"},{default:s(()=>e[0]||(e[0]=[n("Connection module documentation")])),_:1}),e[6]||(e[6]=n("."))]),e[9]||(e[9]=l('<hr><h2 id="exposed-api" tabindex="-1"><a class="header-anchor" href="#exposed-api"><span>Exposed API</span></a></h2><ul><li><p><strong>Enums</strong></p><ul><li><code>ARConnectionConfigKey</code>: Enum of connection configuration keys.</li></ul></li><li><p><strong>Defaults</strong></p><ul><li><code>CONNECTION_CONFIG_DEFAULT</code>: Default values for each connection configuration key.</li><li><code>CONNECTION_CONFIG_TYPES_DEFAULTS</code>: Default types for each connection configuration key.</li></ul></li><li><p><strong>Classes</strong></p><ul><li><code>ARConnectionConfig</code>: Class representing the connection configuration.</li></ul></li></ul><hr><h2 id="arconnectionconfig" tabindex="-1"><a class="header-anchor" href="#arconnectionconfig"><span><code>ARConnectionConfig</code></span></a></h2><h3 id="fallback-configuration" tabindex="-1"><a class="header-anchor" href="#fallback-configuration"><span>Fallback Configuration</span></a></h3><p>Keys responsible for the fallback behaviour of the connection.</p><ul><li><p><code>ARConnectionConfigKey.ALLOW_FALLBACK</code> (default: <code>false</code>)</p><p>Enables all types of fallback on connection errors.</p></li><li><p><code>ARConnectionConfigKey.ALLOW_MULTIPLE_FALLBACKS</code> (default: <code>false</code>)</p><p>Enables multiple fallback attempts. If enabled, the fallback mechanism can be triggered multiple times on non-consecutive request errors. This means, unsuccessful requests attempts (if not one after the other) can still be restored. Does not affect loop protection.</p></li><li><p><code>ARConnectionConfigKey.ALLOW_UPGRADE_HTTP_TO_HTTPS</code> (default: <code>true</code>)</p><p>Allows upgrading HTTP connections to HTTPS as a fallback mechanism.</p></li><li><p><code>ARConnectionConfigKey.STRICT_SSL</code> (default: <code>false</code>)</p><p>If set, forbids downgrading HTTPS connections to HTTP as a fallback mechanism.</p></li><li><p><code>ARConnectionConfigKey.NOTIFIED_STRICT_SSL_NO_SSL</code> (default: <code>false</code>)</p><p>Flag for monitoring whether user was already notified about strict SSL being enabled and causing fallback blocking.</p></li></ul><hr><h3 id="ssl-configuration" tabindex="-1"><a class="header-anchor" href="#ssl-configuration"><span>SSL Configuration</span></a></h3><ul><li><p><code>ARConnectionConfigKey.USE_SSL</code> (default: <code>false</code>)</p><p>If set, enables the use of SSL/TLS for connections. This configuration is overwritten if <code>use_ssl</code> argument is passed on <code>Connection</code> or <code>AsusRouter</code> initialization.</p></li><li><p><code>ARConnectionConfigKey.VERIFY_SSL</code> (default: <code>false</code>)</p><p>Option to verify SSL/TLS certificates on requests.</p></li><li><p><code>ARConnectionConfigKey.NOTIFIED_VERIFY_SSL_FAILED</code> (default: <code>false</code>)</p><p>Flag for monitoring whether user was already notified about SSL verification failures.</p></li></ul><hr><h3 id="general-configuration" tabindex="-1"><a class="header-anchor" href="#general-configuration"><span>General configuration</span></a></h3><ul><li><p><code>ARConnectionConfigKey.PORT</code> (default: <code>0</code>)</p><p>Port number for the connection. This configuration is overwritten if <code>port</code> argument is passed on <code>Connection</code> or <code>AsusRouter</code> initialization. The default value of <code>0</code> guarantees usage of the known default port for the selected protocol.</p></li></ul>',14))])}const m=t(f,[["render",u]]),C=JSON.parse('{"path":"/library/connection_config.html","title":"Connection Configuration","lang":"en-US","frontmatter":{"title":"Connection Configuration"},"git":{"createdTime":1757648996000,"updatedTime":1757648996000,"contributors":[{"name":"Yevhenii Vaskivskyi","username":"","email":"yevhenii@vaskivskyi.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"library/connection_config.md","localizedDate":"September 12, 2025"}');export{m as comp,C as data};
